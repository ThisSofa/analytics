version: '3.8'

services:
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - ./grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=$GRAFANA_ADMIN
      - GF_SECURITY_ADMIN_PASSWORD=$GRAFANA_PASS
      - GF_SERVER_ROOT_URL=$URL
    networks:
      - analytics

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=7d"
      - "--web.enable-lifecycle"
    restart: always
    networks:
      - analytics
    expose:
      - "9090"

  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    restart: always
    networks:
      - analytics
    ports:
      - "9100:9100"

  nginx:
    image: nginx:latest
    container_name: nginx_prometheus_auth
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./.htpasswd:/etc/nginx/.htpasswd 
    ports:
      - "9090:80"
    networks:
      - analytics
    depends_on:
      - prometheus

  postgres:
    image: postgres
    container_name: postgres
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - analytics

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - "8080:8080"
    networks:
      - analytics

networks:
  analytics:
    driver: bridge

volumes:
  postgres_data:
    driver: local